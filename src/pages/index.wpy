/*
 * MIT License
 *
 * Copyright (c) 2017 Feng Yifei.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Revision History:
 *     Initial: 2017/08/08        Feng Yifei
 */

<template>
  <view class="topBorder"></view>
  <view class="page">
    <repeat for="{{message}}" key="index" index="index" item="item">
      <abstract :message="item" :image="images[index]" @childFn.user="onShowDetail"/>
    </repeat>
  </view>
</template>

<style lang="less">
</style>

<script>
  import wepy from 'wepy'
  import Abstract from '../components/abstract'
  import { mapIssues, listIssues } from '../libs/github'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '技术资讯'
    }

    components = {
      abstract: Abstract
    }

    data = {
      message: [],
      images: []
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      onShowDetail(evt) {
        try {
          wepy.setStorageSync('body', evt.source.message.body)
        } catch (e) {
        }

        wepy.navigateTo({
          url: './detail'
        })
      }
    }

    watch = {
      message (newValue, oldValue) {
        if (newValue) {
          wepy.hideToast()
        }
      }
    }

    async onLoad() {
      let self = this

      self.message = await listIssues()

      self.images = await mapIssues()

      this.$apply()
    }

    onShow() {
      let self = this

      if (self.message.length === 0) {
        wepy.showToast({
          title: '正在加载...',
          icon: 'loading',
          mask: 'true',
          duration: 6000
        })
      }
    }
  }
</script>
