/*
 * MIT License
 *
 * Copyright (c) 2017 Feng Yifei.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Revision History:
 *     Initial: 2017/08/08        Feng Yifei
 */

<template>
  <view class="topBorder"></view>
  <view class="page" wx:if="{{status == 0}}">
    <repeat for="{{message}}" key="index" index="index" item="item">
      <abstract :message="item" :image="images[index]" :width="windowWidth" @childFn.user="onShowDetail"/>
    </repeat>
  </view>
  <view
    wx:else
    @tap="onTapToReload"
    class="networkFailContent"
    style="height: {{windowHeight}}px;">
    <view class="networkFail">
      <image
        src="../images/wifi.png"
        style="height: 2rem; width: 2rem;"></image>
      <text
        class="failText"
        style="font-size: 1rem;">{{networkFail}}</text>
      <text
        class="reloadText"
        style="font-size: 1rem;">{{tapToReload}}</text>
    </view>
  </view>
</template>

<style lang="less">
  .networkFailContent {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f6f8fa;
  }
  .networkFail {
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #f6f8fa;
  }
  .failText {
    color: #2c2c2c;
    margin: 6px 0;
  }
  .reloadText {
    color: #999999;
  }
</style>

<script>
  import wepy from 'wepy'
  import Abstract from '../components/abstract'
  import { mapIssues, listIssues } from '../libs/github'
  import { getWindowSize } from '../util/system'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '技术资讯'
    }

    components = {
      abstract: Abstract
    }

    data = {
      windowHeight: 0,
      windowWidth: 0,
      message: [],
      images: [],
      networkFail: '网络请求失败',
      tapToReload: '请轻触屏幕重新加载',
      status: 0
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      onShowDetail(evt) {
        try {
          wepy.setStorageSync('body', evt.source.message.body)
        } catch (e) {
        }

        wepy.navigateTo({
          url: './detail'
        })
      },

      async onTapToReload() {
        let self = this

        wepy.showLoading({
          title: '正在加载...',
          mask: 'true'
        })

        let data = await listIssues()

        self.message = data[0]
        self.status = data[1]

        if (!isNaN(self.status)) {
          await wepy.hideLoading()
        }

        this.$apply()
      }
    }

    async onLoad() {
      let self = this

      wepy.showLoading({
        title: '正在加载...',
        mask: 'true'
      })

      let windowSize = await getWindowSize()

      self.windowWidth = windowSize.windowWidth
      self.windowHeight = windowSize.windowHeight

      self.images = await mapIssues()

      let data = await listIssues()

      self.message = data[0]
      self.status = data[1]

      if (!isNaN(self.status)) {
        await wepy.hideLoading()
      }

      this.$apply()
    }
  }
</script>
