/*
 * MIT License
 *
 * Copyright (c) 2017 Feng Yifei
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Revision History:
 *     Initial: 2017/08/09        Lin Hao
 */

<style lang="less">
</style>

<template>
  <view class="topBorder"></view>
</template>

<script>
  import wepy from 'wepy'
  import { getHeight } from '../util/system'

  export default class All extends wepy.page {
    data = {
      windowHeight: 0,
      windowWidth: 0
    }

    config = {
      navigationBarTitleText: '全部'
    }

    methods = {}

    onLoad() {
      let self = this

      // 获取可用屏幕宽高
      if (getCurrentPages().length === 1) {
        try {
          self.windowHeight = wepy.getStorageSync('windowHeight')
          self.windowWidth = wepy.getStorageSync('windowWidth')
        } catch (e) {}
      } else {
        wepy.getSystemInfo({
          success: function (res) {
            self.windowHeight = res.windowHeight
            self.windowWidth = res.windowWidth
          }
        })
      }
    }
  }
</script>
